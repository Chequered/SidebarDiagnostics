<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>Sidebar Diagnostics</value>
    <comment>Name of the app</comment>
  </data>
  <data name="Clock" xml:space="preserve">
    <value>Klok</value>
    <comment>Label for clock speed sensors</comment>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Sluiten</value>
    <comment>Close app taskbar menu item</comment>
  </data>
  <data name="Core" xml:space="preserve">
    <value>core</value>
    <comment>Label for CPU or GPU core sensors</comment>
  </data>
  <data name="CPU" xml:space="preserve">
    <value>CPU</value>
    <comment>CPU monitor title</comment>
  </data>
  <data name="Donate" xml:space="preserve">
    <value>Doneer</value>
    <comment>Donate taskbar menu item</comment>
  </data>
  <data name="Drives" xml:space="preserve">
    <value>Schijven</value>
    <comment>Drives monitor title</comment>
  </data>
  <data name="Fan" xml:space="preserve">
    <value>Ventilator</value>
    <comment>Label for fan speed sensors</comment>
  </data>
  <data name="Free" xml:space="preserve">
    <value>Gratis</value>
    <comment>Label for amount free sensors</comment>
  </data>
  <data name="GPU" xml:space="preserve">
    <value>GPU</value>
    <comment>GPU monitor title</comment>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Verberg</value>
    <comment>Hide taskbar menu item</comment>
  </data>
  <data name="In" xml:space="preserve">
    <value>Inkomend</value>
    <comment>Label for bandwidth in sensors</comment>
  </data>
  <data name="Load" xml:space="preserve">
    <value>Belast</value>
    <comment>Label for load percentage sensors</comment>
  </data>
  <data name="Network" xml:space="preserve">
    <value>Netwerk</value>
    <comment>Network monitor title</comment>
  </data>
  <data name="Out" xml:space="preserve">
    <value>Uitgaand</value>
    <comment>Label for bandwidth out sensors</comment>
  </data>
  <data name="RAM" xml:space="preserve">
    <value>RAM</value>
    <comment>RAM monitor title</comment>
  </data>
  <data name="Read" xml:space="preserve">
    <value>Lees</value>
    <comment>Label for drive read rate sensors</comment>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Herlaad</value>
    <comment>Reload taskbar menu item</comment>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Instellingen</value>
    <comment>Settings taskbar menu item</comment>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Tonen</value>
    <comment>Show taskbar menu item</comment>
  </data>
  <data name="Sidebar" xml:space="preserve">
    <value>Sidebar</value>
    <comment>Title of the sidebar window</comment>
  </data>
  <data name="Temp" xml:space="preserve">
    <value>Temp</value>
    <comment>Label for temperature sensors</comment>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Tijd</value>
    <comment>Sidebar clock title</comment>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
    <comment>Update taskbar menu item</comment>
  </data>
  <data name="Used" xml:space="preserve">
    <value>In beslag</value>
    <comment>Label for amount used sensors</comment>
  </data>
  <data name="Visibility" xml:space="preserve">
    <value>Zichtbaarheid</value>
    <comment>Visibility taskbar menu item</comment>
  </data>
  <data name="Voltage" xml:space="preserve">
    <value>Voltage</value>
    <comment>Label for voltage sensors</comment>
  </data>
  <data name="VRAM" xml:space="preserve">
    <value>VRAM</value>
    <comment>Label for GPU VRAM sensors</comment>
  </data>
  <data name="Write" xml:space="preserve">
    <value>Schrijf</value>
    <comment>Label for drive read rate sensors</comment>
  </data>
</root>
